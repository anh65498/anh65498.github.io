<% include partials/header.ejs %>
<div class="ui main text container segment">
  <div class="ui huge header">New Entry</div>

  <form class="ui form" action="/journals" method="POST">
    <div class="field">
      <label>Completed Tasks</label>
      <input type="text" name="journal[completedTasks]">
    </div>

    <div class="field">
      <label>Events</label>
      <input type="text" name="journal[event]">
    </div>

    <div class="field">
      <label>Learn</label>
      <input type="text" name="journal[learn]">
    </div>

    <div class="field">
      <label>Celebration</label>
      <input type="text" name="journal[celebration]">
    </div>

    <div class="field">
      <label>Tomorrow Goal</label>
      <input type="text" name="journal[goalTomorrow]">
    </div>
    <!-- <p> Did you complete your goal today? </p>
      <div>
        <input type="checkbox" name="" value="Yes"> Yes<br>
        <input type="checkbox" name="" value="No"> No<br>
      </div> -->
    <!-- <input type="text" name="journal[emotion]"> -->
    <div class="field">
      <label>Journal Content</label>
      <textarea name="journal[note]"></textarea>
    </div>
    <button class="ui big blue basic button">Submit</button>
  </form>
</div>

<% include partials/footer.ejs %>

<% /* Why <input type="text" name="blog[title]"> ?

- What this will do is, instead of making the value for title available directly from req.body.title it will put it inside of an object, like so: req.body.blog.title
- Now all of the values from the inputs in the form get added into one object (req.body.blog) and you can easily input that data into the database simply by passing in req.body.blog to Blog.create()
- Once in the POST route, the req.body.blog object will look something like this:
    {
      title: "Hello world",
      description: "This is a blog post"
    }
- we use the name="blog[title]" syntax instead of name="blog['title']" or name="blog.title" because this syntax is specific to body-parser.
    */ %>
